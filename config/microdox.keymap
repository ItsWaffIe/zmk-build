/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    quick_tap_ms = <150>;
    retro-tap;
};

 / {
    combos {
        compatible = "zmk,combos";
        combo_ent {
            timeout-ms = <50>;
            key-positions = <3 6>;
            bindings = <&kp ENTER>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp SQT>;
        };
        combo_ques {
            timeout-ms = <50>;
            key-positions = <23 26>;
            bindings = <&kp QUESTION>;
        };
        combo_dquote {
            timeout-ms = <50>;
            key-positions = <22 26>;
            bindings = <&kp DQT>;
        };
        combo_col {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp COLON>;
        };
        combo_unds {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp UNDER>;
        };
        combo_mins {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&kp MINUS>; 
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
   &mt LALT Q  &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &mt RALT P
   &mt LSHFT A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &mt RSHFT SEMI
   &mt LCTL Z  &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &mt RCTL FSLH
          &kp LGUI &mo 1 &kp SPACE &kp BSPC &mo 2 &kp RC(RS(V))
                        >;
                };
                nav_layer {
                        bindings = <
   &bt BT_CLR   &trans      &kp ESC  &kp TILDE &trans     &kp TAB  &kp HOME &kp UP   &kp END   &kp DEL
   &bt BT_SEL 0 &kp K_CMENU &kp RALT &kp LCTRL &mo 3      &kp FSLH &kp LEFT &kp DOWN &kp RIGHT &kp BSPC
   &bt BT_SEL 1 &trans      &trans   &trans    &trans     &kp BSLH &kp RET  &trans   &trans    &trans
                            &trans   &trans    &trans     &trans   &trans   &trans
                        >;
                };
                sym_layer {
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &trans    &trans    &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE
   &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans          &trans   &kp BSLH
                       &kp LGUI  &trans    &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                num_layer {
                        bindings = <
   &trans &trans &trans &trans &trans    &kp A  &kp N7  &kp N8 &kp N9 &kp D
   &trans &trans &trans &trans &trans    &kp B  &kp N4  &kp N5 &kp N6 &kp E
   &trans &trans &trans &trans &trans    &kp C  &kp N1  &kp N2 &kp N3 &kp F
                 &trans &trans &trans    &kp N0 &kp DOT &trans
                        >;
                };
        };
};