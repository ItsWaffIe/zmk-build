// Copyright 2022 jack (@waffle87)
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../util.h"

&lt {
  tapping-term-ms = <100>;
};

/ {
  keymap {
  compatible = "zmk,keymap";
    0 {
      bindings = <
        &kp  Q &kp W &kp E &kp R  &kp T        &kp Y &kp  U &kp I     &kp O   &kp P
        HRML(A,    S,    D,    F) &kp G        &kp H HRMR(J,    K,        L,      SEMI)
        &kp  Z &kp X &kp C &kp V  &kp B        &kp N &kp  M &kp COMMA &kp DOT &kp FSLH
                    &lt 1 ESC &kp SPACE        &kp BSPC &lt 2 RS(RC(V))
      >;
    };
    1 {
      bindings = <
        &kp  N1       &kp N2  &kp N3   &kp N4    &kp N5           &kp N6    &kp  N7   &kp N8     &kp N9     &kp N0
        HRML(EXCL,        AT,     HASH,    DLLR) &kp PRCNT        &kp CARET HRMR(AMPS,    ASTRK,     LPAR,      RPAR)
        &kp  C_VOL_DN &kp TAB &kp CAPS &kp TILDE &kp GRAVE        &kp LEFT  &kp  DOWN &kp UP     &kp RIGHT  &kp C_VOL_UP
                                             &trans &trans        &trans &pnp
      >;
    };
    2 {
      bindings = <
        &bootloader &bt BT_NXT &none  &none  &none        &none  &none  &none  &none  &none
        &bt BT_CLR  &bt BT_PRV &none  &none  &none        &none  &none  &none  &none  &none
        &kp F1      &kp F2     &kp F3 &kp F4 &kp F5       &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
                                      &trans &trans       &trans &trans
      >;
    };
  };
  macros {
    emdash: emdash {
      label = "EM_DASH";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LSHFT &kp LCTRL>,
                 <&macro_tap &kp U &kp N2 &kp N0 &kp N1 &kp N4>,
                 <&macro_release &kp LSHFT &kp LCTRL>;
    };
  };
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <130>;
      quick-tap-ms = <160>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    pnp: play_next_prev {
      compatible = "zmk,behavior-tap-dance";
      label = "PLAY_NEXT_PREV";
      #binding-cells = <0>;
      tapping-term-ms = <210>;
      bindings = <&kp C_PLAY>, <&kp C_NEXT>, <&kp C_PREV>;
    };
    TAP_DANCE(bsls_pipe, &kp BSLH, &kp PIPE)
    TAP_DANCE(quot_dquo, &kp SQT,  &kp DQT)
    TAP_DANCE(cbrkt,     &kp LBRC, &kp RBRC)
    TAP_DANCE(brkt,      &kp LBKT, &kp RBKT)
    TAP_DANCE(min_dash,  &kp MINUS, &emdash)
  };
  combos {
    compatible = "zmk,combos";
    //    name       output         pos.
    COMBO(ru_ent,    &kp RET,       3 6)
    COMBO(dk_eql,    &kp EQUAL,     12 17)
    COMBO(gh_quot,   &td_quot_dquo, 14 15)
    COMBO(ty_coln,   &kp COLON,     4 5)
    COMBO(bn_unds,   &kp UNDER,     24 25)
    COMBO(er_cbkt,   &td_cbrkt,     2 3)
    COMBO(ui_brkt,   &td_brkt,      6 7)
    COMBO(ccom_plus, &kp PLUS,      22 27)
    COMBO(ei_bsls,   &td_bsls_pipe, 2 7)
    COMBO(vm_mins,   &td_min_dash,     23 26)
    COMBO(fj_capw,   &caps_word,    13 16)
  };
};
