/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h> 

&mt {
    quick_tap_ms = <150>;
};

&lt {
    quick_tap_ms = <110>;
};

 / {
    combos {
        compatible = "zmk,combos";
        combo_ent {
            timeout-ms = <50>;
            key-positions = <3 6>;
            bindings = <&kp ENTER>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp SQT>;
        };
        combo_ques {
            timeout-ms = <50>;
            key-positions = <23 26>;
            bindings = <&kp QUESTION>;
        };
        combo_dquote {
            timeout-ms = <50>;
            key-positions = <22 26>;
            bindings = <&kp DQT>;
        };
        combo_col {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp COLON>;
        };
        combo_unds {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp UNDER>;
        };
        combo_mins {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&kp MINUS>; 
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
    &mt LALT Q  &kp W   &kp E   &kp R   &kp T  &kp Y   &kp U   &kp I     &kp O      &mt RALT P
    &mt LSHFT A   &kp S   &kp D  &kp F    &kp G  &kp H   &kp J   &kp K &kp L &mt RSHFT SEMI
    &mt LCTL Z      &kp X   &kp C   &kp V   &kp B  &kp N   &kp M   &kp COMMA  &mt RCTL DOT
    &kp C_VOL_DN  &kp C_BRI_DEC   &kp LGUI       &lt 1 SPACE    &kp BSPC   &kp RC(RS(V))   &kp C_BRI_INC    &kp C_VOL_UP
            >;
        };
        lower {
            bindings = <
    &mt LALT N1     &kp N2     &kp N3     &kp N4     &kp N5 &kp N6 &kp N7     &kp N8      &kp N9    &mt RALT N0
    &mt LSHFT EXCL    &kp AT     &kp HASH     &kp DLLR     &kp PRCNT &kp CARET &kp AMPERSAND     &kp ASTRK      &kp LPAR &mt RSHFT RPAR
    &mt LCTL ESC        &kp TAB      &kp CAPS    &kp TILDE  &kp GRAVE  &kp LEFT      &kp UP       &kp DOWN     &mt RCTL RIGHT
    &kp C_PREV &trans    &kp LGUI         &trans        &kp FSLH             &kp RGUI     &trans    &kp C_NEXT
            >;
        };

        raise {
            bindings = <
    &kp MINUS &kp EQUAL &kp LBKT &kp RBKT       &kp BSLH &none &none       &none       &none     &none
    &kp UNDER     &kp PLUS     &kp LBRC     &kp RBRC      &kp PIPE &none &none    &none    &none &none
    &none                 &none      &none       &none &none &none       &none        &none     &none
    &bootloader      &reset      &bt BT_CLR         &kp SEMI        &trans             &none      &bt BT_PRV    &bt BT_NXT
            >;
        };
    };
};
