/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping_term_ms = <420>;
};

 / {
    combos {
        compatible = "zmk,combos";
        combo_ent {
            timeout-ms = <50>;
            key-positions = <4 7>;
            bindings = <&kp ENTER>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp SQT>;
        };
        combo_ques {
            timeout-ms = <50>;
            key-positions = <28 31>;
            bindings = <&kp QUESTION>;
        };
        combo_dquote {
            timeout-ms = <50>;
            key-positions = <27 31>;
            bindings = <&kp DQT>;
        };
        combo_col {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp COLON>;
        };
        combo_unds {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp UNDER>;
        };
        combo_mins {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&kp MINUS>; 
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &trans       &kp Q        &kp W &kp E &kp R &kp T         &kp Y &kp U  &kp I     &kp O   &kp P           &kp RG(RS(N4))
   &kp LG(TAB)  &mt LSHFT A  &kp S &kp D &kp F &kp G         &kp H &kp J  &kp K     &kp L   &mt LSHFT SEMI  &cp C_PLAY
   &trans       &mt LCMD Z   &kp X &kp C &kp V &kp B         &kp N &kp M  &kp COMMA &kp DOT &mt RCMD FSLH   &kp RG(S)
                             &kp LALT &mo 1 &kp SPACE        &kp BSPC &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5            &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans            &trans   &trans   &trans &trans    &trans &trans
                                        &kp LGUI     &trans       &kp SPACE         &kp RET &trans &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans    &trans  &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &kp GRAVE
   &kp LSHFT &trans    &trans  &trans    &trans    &trans      &trans    &trans    &trans          &trans   &kp BSLH &kp TILDE
                                   &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };
        };
};